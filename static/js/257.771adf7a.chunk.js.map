{"version":3,"file":"static/js/257.771adf7a.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailsWrapper = styled.div`\n  padding: ${props => props.theme.spacing(4)};\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  gap: ${props => props.theme.spacing(2)};\n  margin-top: ${props => props.theme.spacing(4)};\n`;\n\nexport const MovieImage = styled.img`\n  width: ${props => props.theme.spacing(75)};\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  margin-left: ${props => props.theme.spacing(5)};\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: ${props => props.theme.fontSize.l};\n  color: ${props => props.theme.colors.accent};\n`;\n\nexport const MovieUserScore = styled.p`\n  font-size: ${props => props.theme.fontSize.m};\n  font-weight: 600;\n`;\n\nexport const MovieOverview = styled.p`\n  font-size: ${props => props.theme.fontSize.m};\n`;\n\nexport const OverviewTitle = styled.h2`\n  font-size: ${props => props.theme.fontSize.m};\n  color: ${props => props.theme.colors.accent};\n`;\n\nexport const GenresContainer = styled.div`\n  margin-top: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const GenresTitle = styled.h2`\n  font-size: ${props => props.theme.fontSize.m};\n  color: ${props => props.theme.colors.accent};\n`;\n\nexport const GenresList = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Genres = styled.p``;\n\nexport const AdditionalInfoContainer = styled.div`\n  margin-top: ${props => props.theme.spacing(4)};\n`;\n\nexport const AdditionalInfoTitle = styled.h2`\n  font-size: ${props => props.theme.fontSize.m};\n  color: ${props => props.theme.colors.accent};\n`;\n\nexport const DetailsInfo = styled.ul`\n  list-style-type: none;\n`;\n\nexport const DetailsItem = styled.li`\n  font-weight: 600;\n  font-size: ${props => props.theme.fontSize.m};\n  margin-bottom: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n  color: ${props => props.theme.colors.accent};\n\n  &.active {\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  color: ${props => props.theme.colors.accent};\n  font-weight: bold;\n  font-size: ${props => props.theme.fontSize.m};\n`;\n","import Loader from 'components/Loader/Loader';\nimport {\n  errorMessage,\n  notificationOptions,\n} from 'components/Notification/Notification';\nimport { getMovieDetails } from 'components/api/api';\nimport React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {\n  AdditionalInfoLink,\n  AdditionalInfoTitle,\n  BackLink,\n  DetailsInfo,\n  DetailsItem,\n  Genres,\n  GenresTitle,\n  MovieContainer,\n  MovieDetailsContainer,\n  MovieDetailsWrapper,\n  MovieImage,\n  MovieOverview,\n  MovieTitle,\n  MovieUserScore,\n  OverviewTitle,\n} from './MovieDetails.styled';\nimport poster from 'components/images/coming soon.jpg';\n\nconst LazyReviews = lazy(() => import('../Reviews/Reviews'));\nconst LazyCast = lazy(() => import('../Cast/Cast'));\n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function fetchMovieDetails() {\n      try {\n        setIsLoading(true);\n        const data = await getMovieDetails(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        toast.error(`${errorMessage}`, notificationOptions);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const getImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/w500/${path}` : poster;\n  };\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieDetails;\n\n  const getUserScore = score => {\n    return Math.round(score);\n  };\n\n  return (\n    <MovieDetailsWrapper>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n\n      {isLoading && <Loader />}\n      {{\n        title,\n        release_date,\n        popularity,\n        overview,\n        genres,\n        poster_path,\n        original_title,\n      } && (\n        <MovieContainer>\n          <div>\n            <MovieImage src={getImageUrl(poster_path)} alt={original_title} />\n          </div>\n\n          <MovieDetailsContainer>\n            <MovieTitle>\n              {title} ({release_date && release_date.slice(0, 4)})\n            </MovieTitle>\n            <MovieUserScore>\n              User score: {getUserScore(movieDetails.vote_average)}%\n            </MovieUserScore>\n            <OverviewTitle>Overview</OverviewTitle>\n            <MovieOverview>{overview}</MovieOverview>\n            <GenresTitle>Genres</GenresTitle>\n            <Genres>{genres.map(genre => genre.name).join(', ')}</Genres>\n\n            <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n            <DetailsInfo>\n              <DetailsItem>\n                <AdditionalInfoLink to={`/movies/${movieId}/cast`}>\n                  Cast\n                </AdditionalInfoLink>\n              </DetailsItem>\n              <DetailsItem>\n                <AdditionalInfoLink to={`/movies/${movieId}/reviews`}>\n                  Reviews\n                </AdditionalInfoLink>\n              </DetailsItem>\n            </DetailsInfo>\n          </MovieDetailsContainer>\n        </MovieContainer>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<LazyCast />} />\n          <Route path=\"reviews\" element={<LazyReviews />} />\n        </Routes>\n      </Suspense>\n      <ToastContainer />\n    </MovieDetailsWrapper>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["MovieDetailsWrapper","styled","props","theme","spacing","MovieContainer","MovieImage","MovieDetailsContainer","MovieTitle","fontSize","l","colors","accent","MovieUserScore","m","MovieOverview","OverviewTitle","GenresTitle","Genres","AdditionalInfoTitle","DetailsInfo","DetailsItem","AdditionalInfoLink","NavLink","primary","BackLink","LazyReviews","lazy","LazyCast","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovieDetails","data","toast","errorMessage","notificationOptions","fetchMovieDetails","score","path","title","release_date","popularity","overview","genres","poster_path","original_title","to","current","Loader","src","poster","alt","slice","vote_average","Math","round","map","genre","name","join","Suspense","fallback","element"],"sourceRoot":""}