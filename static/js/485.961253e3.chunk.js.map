{"version":3,"file":"static/js/485.961253e3.chunk.js","mappings":"+SAEaA,EAAgBC,EAAAA,EAAAA,IAAH,yCACb,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAGLC,EAAYJ,EAAAA,EAAAA,GAAH,8DACX,SAAAC,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,MAAvB,IAIHC,EAAWP,EAAAA,EAAAA,GAAH,4HAGZ,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAKDK,EAAWR,EAAAA,EAAAA,GAAH,qUAiBRS,EAAQT,EAAAA,EAAAA,IAAH,mEAKLU,EAAaV,EAAAA,EAAAA,EAAH,yHAGL,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,IAAxB,IACJ,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,IAAxB,IACb,SAAAF,GAAK,OAAIA,EAAMC,MAAMG,OAAOM,KAAvB,I,6BCoBhB,MA/CA,WACE,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAG0BE,EAAAA,EAAAA,MAH1B,OAGUC,EAHV,OAIIL,EAAUK,GAJd,gDAMIC,EAAAA,GAAAA,MAAA,UAAeC,EAAAA,IAAgBC,EAAAA,IANnC,yBAQIN,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdO,EACD,GAAE,KAOD,UAACxB,EAAD,YACE,SAACK,EAAD,UAAW,oBACX,SAACG,EAAD,iBACGM,QADH,IACGA,OADH,EACGA,EAAQW,KAAI,SAAAC,GAAK,OAChB,SAAC,KAAD,CAAqBC,GAAE,kBAAaD,EAAME,IAA1C,UACE,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,KAZMC,EAYWJ,EAAMK,YAX5BD,EAAI,0CAAsCA,GAASE,GAY9CC,IAAKP,EAAMQ,MACXC,MAAO,IACPC,OAAQ,OAEV,SAACzB,EAAD,UAAae,EAAMQ,YARZR,EAAME,IATL,IAAAE,CAQI,MAcnBd,IAAa,SAACqB,EAAA,EAAD,KACd,SAAC,KAAD,MAGL,C","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.div`\n  padding: ${props => props.theme.spacing(4)};\n`;\n\nexport const HomeTitle = styled.h1`\n  color: ${props => props.theme.colors.accent};\n  text-align: center;\n`;\n\nexport const HomeList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: ${props => props.theme.spacing(4)};\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const HomeLink = styled.li`\n  width: 224px;\n  height: 324px;\n  cursor: pointer;\n  border-radius: 5px;\n  position: relative;\n\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(180deg, #0000 63.48%, #000000e6 92.16%);\n    border-radius: 5px;\n    position: absolute;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 5px;\n  max-width: 100%;\n`;\n\nexport const MovieTitle = styled.p`\n  position: absolute;\n  bottom: 0;\n  padding-left: ${props => props.theme.spacing(2.5)};\n  padding-right: ${props => props.theme.spacing(2.5)};\n  color: ${props => props.theme.colors.white};\n`;\n","import Loader from 'components/Loader/Loader';\nimport {\n  errorMessage,\n  notificationOptions,\n} from 'components/Notification/Notification';\nimport { getTrendingMovies } from 'components/api/api';\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {\n  HomeContainer,\n  HomeLink,\n  HomeList,\n  HomeTitle,\n  Image,\n  MovieTitle,\n} from './Home.styled';\nimport { Link } from 'react-router-dom';\nimport poster from '../../components/images/coming soon.jpg';\n\nfunction Home() {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        const results = await getTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        toast.error(`${errorMessage}`, notificationOptions);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  const getImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/w200/${path}` : poster;\n  };\n\n  return (\n    <HomeContainer>\n      <HomeTitle>Trending today</HomeTitle>\n      <HomeList>\n        {movies?.map(movie => (\n          <Link key={movie.id} to={`/movies/${movie.id}`}>\n            <HomeLink>\n              <Image\n                src={getImageUrl(movie.poster_path)}\n                alt={movie.title}\n                width={224}\n                height={325}\n              />\n              <MovieTitle>{movie.title}</MovieTitle>\n            </HomeLink>\n          </Link>\n        ))}\n      </HomeList>\n      {isLoading && <Loader />}\n      <ToastContainer />\n    </HomeContainer>\n  );\n}\n\nexport default Home;\n"],"names":["HomeContainer","styled","props","theme","spacing","HomeTitle","colors","accent","HomeList","HomeLink","Image","MovieTitle","white","useState","movies","setMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","results","toast","errorMessage","notificationOptions","fetchMovies","map","movie","to","id","src","path","poster_path","poster","alt","title","width","height","Loader"],"sourceRoot":""}