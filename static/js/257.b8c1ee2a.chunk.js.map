{"version":3,"file":"static/js/257.b8c1ee2a.chunk.js","mappings":"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","sources":["components/Notification/Notification.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const notificationMassege = 'Please enter something for search.';\nexport const errorMessage =\n  'Sorry, there are no images matching your search query. Please try again.';\n\nexport const notificationOptions = {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailsWrapper = styled.div`\n  padding: 15px;\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const MovieImage = styled.img`\n  width: ${props => props.theme.spacing(75)};\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  margin-left: ${props => props.theme.spacing(5)};\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: ${props => props.theme.fontSize.l};\n`;\n\nexport const MovieUserScore = styled.p`\n  font-size: ${props => props.theme.fontSize.m};\n  font-weight: 600;\n`;\n\nexport const MovieOverview = styled.p`\n  font-size: ${props => props.theme.fontSize.m};\n`;\n\nexport const GenresContainer = styled.div`\n  margin-top: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const GenresList = styled.ul`\n  list-style-type: none;\n`;\n\nexport const GenresItem = styled.li`\n  display: inline-block;\n  margin-right: ${props => props.theme.spacing(2.5)};\n  font-size: ${props => props.theme.fontSize.s};\n  line-height: ${props => props.theme.spacing(4.5)};\n`;\n\nexport const AdditionalInfoContainer = styled.div`\n  margin-top: ${props => props.theme.spacing(5)};\n`;\n\nexport const AdditionalInfoTitle = styled.h3`\n  font-size: ${props => props.theme.fontSize.m};\n`;\n\nexport const DetailsInfo = styled.ul`\n  list-style-type: none;\n`;\n\nexport const DetailsItem = styled.li`\n  font-weight: 600;\n  font-size: ${props => props.theme.fontSize.m};\n  margin-bottom: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: ${props => props.theme.colors.white};\n\n  &.active {\n    color: ${props => props.theme.colors.success};\n    border-bottom: 1px solid ${props => props.theme.colors.success};\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  color: ${props => props.theme.colors.accent};\n  font-weight: bold;\n  font-size: ${props => props.theme.fontSize.l};\n  margin-bottom: ${props => props.theme.spacing(5)};\n`;\n","import Loader from 'components/Loader/Loader';\nimport {\n  errorMessage,\n  notificationOptions,\n} from 'components/Notification/Notification';\nimport { getMovieDetails } from 'components/api/api';\nimport React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport {\n  AdditionalInfoContainer,\n  AdditionalInfoTitle,\n  BackLink,\n  DetailsInfo,\n  DetailsItem,\n  GenresContainer,\n  GenresItem,\n  GenresList,\n  MovieContainer,\n  MovieDetailsContainer,\n  MovieDetailsWrapper,\n  MovieImage,\n  MovieOverview,\n  MovieTitle,\n  MovieUserScore,\n} from './MovieDetails.styled';\n\nconst LazyReviews = lazy(() => import('../Reviews'));\nconst LazyCast = lazy(() => import('../Cast/Cast'));\n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function fetchMovieDetails() {\n      try {\n        setIsLoading(true);\n        const data = await getMovieDetails(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        toast.error(`${errorMessage}`, notificationOptions);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieDetails;\n\n  const getUserScore = score => {\n    return Math.round(score);\n  };\n\n  return (\n    <MovieDetailsWrapper>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n\n      {isLoading && <Loader />}\n      {{\n        title,\n        release_date,\n        popularity,\n        overview,\n        genres,\n        poster_path,\n        original_title,\n      } && (\n        <MovieContainer>\n          <MovieImage\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://crawfordroofing.com.au/wp-content/uploads/2018/04/No-image-available.jpg`\n            }\n            alt={original_title}\n          />\n          <MovieDetailsContainer>\n            <MovieTitle>\n              {title} ({release_date && release_date.slice(0, 4)})\n            </MovieTitle>\n            <MovieUserScore>\n              User score: {getUserScore(movieDetails.vote_average)}%\n            </MovieUserScore>\n            <h2>Overview</h2>\n            <MovieOverview>{overview}</MovieOverview>\n            <h2>Genres</h2>\n            {genres && genres.length > 0 && (\n              <GenresContainer>\n                <GenresList>\n                  {genres.map(genre => (\n                    <GenresItem key={genre.id}>{genre.name}</GenresItem>\n                  ))}\n                </GenresList>\n              </GenresContainer>\n            )}\n          </MovieDetailsContainer>\n        </MovieContainer>\n      )}\n      <AdditionalInfoContainer>\n        <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n        <DetailsInfo>\n          <DetailsItem>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </DetailsItem>\n          <DetailsItem>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </DetailsItem>\n        </DetailsInfo>\n\n        <Suspense fallback={<Loader />}>\n          <Routes>\n            <Route path=\"cast\" element={<LazyCast />} />\n            <Route path=\"reviews\" element={<LazyReviews />} />\n          </Routes>\n        </Suspense>\n      </AdditionalInfoContainer>\n    </MovieDetailsWrapper>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["errorMessage","notificationOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","MovieDetailsWrapper","styled","MovieContainer","MovieImage","props","spacing","MovieDetailsContainer","MovieTitle","fontSize","l","MovieUserScore","m","MovieOverview","GenresContainer","GenresList","GenresItem","s","AdditionalInfoContainer","AdditionalInfoTitle","DetailsInfo","DetailsItem","BackLink","NavLink","colors","white","success","accent","LazyReviews","lazy","LazyCast","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovieDetails","data","toast","fetchMovieDetails","score","title","release_date","popularity","overview","genres","poster_path","original_title","to","current","Loader","src","alt","slice","vote_average","Math","round","length","map","genre","name","id","Suspense","fallback","path","element"],"sourceRoot":""}