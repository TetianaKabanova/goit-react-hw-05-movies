{"version":3,"file":"static/js/257.ad4d2188.chunk.js","mappings":"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","sources":["components/Notification/Notification.jsx","components/api/api.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const notificationMassege = 'Please enter something for search.';\nexport const errorMessage =\n  'Sorry, there are no images matching your search query. Please try again.';\n\nexport const notificationOptions = {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f2249742a4b2bb502bbdaea5aac8b8db';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovie = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const MovieImage = styled.img`\n  width: ${props => props.theme.spacing(75)};\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  margin-left: ${props => props.theme.spacing(5)};\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: ${props => props.theme.fontSize.l};\n`;\n\nexport const MovieUserScore = styled.p`\n  font-size: ${props => props.theme.fontSize.m};\n  font-weight: 600;\n`;\n\nexport const MovieOverview = styled.p`\n  font-size: ${props => props.theme.fontSize.m};\n`;\n\nexport const GenresContainer = styled.div`\n  margin-top: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const GenresList = styled.ul`\n  list-style-type: none;\n`;\n\nexport const GenresItem = styled.li`\n  display: inline-block;\n  margin-right: ${props => props.theme.spacing(2.5)};\n  font-size: ${props => props.theme.fontSize.s};\n  line-height: ${props => props.theme.spacing(4.5)};\n`;\n\nexport const AdditionalInfoContainer = styled.div`\n  margin-top: ${props => props.theme.spacing(5)};\n`;\n\nexport const AdditionalInfoTitle = styled.h3`\n  font-size: ${props => props.theme.fontSize.m};\n`;\n\nexport const DetailsInfo = styled.ul`\n  list-style-type: none;\n`;\n\nexport const DetailsItem = styled.li`\n  font-weight: 600;\n  font-size: ${props => props.theme.fontSize.m};\n  margin-bottom: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: ${props => props.theme.colors.dark};\n\n  &.active {\n    color: ${props => props.theme.colors.success};\n    border-bottom: 1px solid ${props => props.theme.colors.success};\n  }\n`;\n","import Loader from 'components/Loader/Loader';\nimport {\n  errorMessage,\n  notificationOptions,\n} from 'components/Notification/Notification';\nimport { getMovieDetails } from 'components/api/api';\nimport React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport {\n  AdditionalInfoContainer,\n  AdditionalInfoTitle,\n  DetailsInfo,\n  DetailsItem,\n  GenresContainer,\n  GenresItem,\n  GenresList,\n  MovieContainer,\n  MovieDetailsContainer,\n  MovieImage,\n  MovieOverview,\n  MovieTitle,\n  MovieUserScore,\n} from './MovieDetails.styled';\n\nconst LazyReviews = lazy(() => import('../Reviews'));\nconst LazyCast = lazy(() => import('../Cast/Cast'));\n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  const locationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function fetchMovieDetails() {\n      try {\n        setIsLoading(true);\n        const data = await getMovieDetails(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error.message);\n        toast.error(`${errorMessage}`, notificationOptions);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieDetails;\n\n  return (\n    <div>\n      <h1>MovieDetails</h1>\n      <>\n        <Link to={backLink.current}>Go back</Link>\n        {isLoading && <Loader />}\n        {{\n          title,\n          release_date,\n          popularity,\n          overview,\n          genres,\n          poster_path,\n          original_title,\n        } && (\n          <MovieContainer>\n            <MovieImage\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : `https://crawfordroofing.com.au/wp-content/uploads/2018/04/No-image-available.jpg`\n              }\n              alt={original_title}\n            />\n            <MovieDetailsContainer>\n              <MovieTitle>\n                {title} ({release_date && release_date.slice(0, 4)})\n              </MovieTitle>\n              <MovieUserScore>User score: {popularity}</MovieUserScore>\n              <h2>Overview</h2>\n              <MovieOverview>{overview}</MovieOverview>\n              <h2>Genres</h2>\n              {genres && genres.length > 0 && (\n                <GenresContainer>\n                  <GenresList>\n                    {genres.map(genre => (\n                      <GenresItem key={genre.id}>{genre.name}</GenresItem>\n                    ))}\n                  </GenresList>\n                </GenresContainer>\n              )}\n            </MovieDetailsContainer>\n          </MovieContainer>\n        )}\n\n        <AdditionalInfoContainer>\n          <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n          <DetailsInfo>\n            <DetailsItem>\n              <Link to=\"cast\" state={{ from: locationRef.current }}>\n                Cast\n              </Link>\n            </DetailsItem>\n            <DetailsItem>\n              <Link to=\"reviews\" state={{ from: locationRef.current }}>\n                Reviews\n              </Link>\n            </DetailsItem>\n          </DetailsInfo>\n\n          <Suspense fallback={<Loader />}>\n            <Routes>\n              <Route path=\"cast\" element={<LazyCast />} />\n              <Route path=\"reviews\" element={<LazyReviews />} />\n            </Routes>\n          </Suspense>\n        </AdditionalInfoContainer>\n      </>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["errorMessage","notificationOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","results","console","log","getSearchMovie","searchQuery","getMovieDetails","movieId","getMovieCast","cast","MovieContainer","styled","MovieImage","props","spacing","MovieDetailsContainer","MovieTitle","fontSize","l","MovieUserScore","m","MovieOverview","GenresContainer","GenresList","GenresItem","s","AdditionalInfoContainer","AdditionalInfoTitle","DetailsInfo","DetailsItem","NavLink","colors","dark","success","LazyReviews","lazy","LazyCast","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","setError","useParams","location","useLocation","backLink","state","from","locationRef","useRef","useEffect","message","toast","fetchMovieDetails","title","release_date","popularity","overview","genres","poster_path","original_title","to","current","Loader","src","alt","slice","length","map","genre","name","id","Suspense","fallback","path","element"],"sourceRoot":""}