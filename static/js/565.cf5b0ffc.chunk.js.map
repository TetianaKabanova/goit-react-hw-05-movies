{"version":3,"file":"static/js/565.cf5b0ffc.chunk.js","mappings":"6SAEaA,EAAWC,EAAAA,EAAAA,GAAH,kDAIRC,EAAcD,EAAAA,EAAAA,GAAH,+CACL,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,IAAxB,IAGXC,EAAWL,EAAAA,EAAAA,EAAH,uFAEN,SAAAE,GAAK,OAAIA,EAAMC,MAAMG,SAASC,CAAzB,IACD,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,IAAxB,IAGXI,EAAgBR,EAAAA,EAAAA,EAAH,2CACX,SAAAE,GAAK,OAAIA,EAAMC,MAAMG,SAASC,CAAzB,IAGPE,EAAYT,EAAAA,EAAAA,IAAH,uCACX,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KAAxB,I,SCgDhB,MAxDA,WACE,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAqBJ,EAAAA,EAAAA,UAAS,MAArBK,GAAT,eAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,oGAEIF,GAAa,GAFjB,UAGuBG,EAAAA,EAAAA,IAAaT,GAHpC,OAGUG,EAHV,OAKIC,EAAQD,GACRI,EAAS,MANb,gDAQIG,EAAAA,GAAAA,MAAY,iDARhB,yBAUIJ,GAAa,GAVjB,6EAHc,sBACTN,GADS,mCAiBdW,EACD,GAAE,CAACX,KAGF,4BACE,wBAAI,UACJ,gCACGK,IAAa,SAACO,EAAA,EAAD,KAEd,SAACvB,EAAD,UACGc,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACR,UAAC3B,EAAD,YACE,SAACQ,EAAD,CACEoB,IACEJ,EAAY,yCAC0BA,GAD1B,mFAIdK,IAAKJ,KAEP,SAACrB,EAAD,UAAWsB,KACX,UAACnB,EAAD,WAAe,cAAYoB,OAVXJ,EADV,MAeK,IAAhBX,EAAKkB,SACJ,yBAAK,0DAKd,C","sources":["pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListCast = styled.ul`\n  list-style-type: none;\n`;\n\nexport const DetailsItem = styled.li`\n  margin-bottom: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const InfoName = styled.p`\n  font-weight: 600;\n  font-size: ${props => props.theme.fontSize.m};\n  margin-bottom: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const InfoCharacter = styled.p`\n  font-size: ${props => props.theme.fontSize.m};\n`;\n\nexport const CastImage = styled.img`\n  width: ${props => props.theme.spacing(37.5)};\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieCast } from 'components/api/api';\nimport Loader from 'components/Loader/Loader';\nimport {\n  CastImage,\n  DetailsItem,\n  InfoCharacter,\n  InfoName,\n  ListCast,\n} from './Cast.styled';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function fetchMovieCast() {\n      try {\n        setIsLoading(true);\n        const cast = await getMovieCast(movieId);\n\n        setCast(cast);\n        setError(null);\n      } catch (error) {\n        toast.error('Oops, something went wrong. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Cast</h1>\n      <>\n        {isLoading && <Loader />}\n\n        <ListCast>\n          {cast.map(({ id, profile_path, original_name, name, character }) => (\n            <DetailsItem key={id}>\n              <CastImage\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : `https://crawfordroofing.com.au/wp-content/uploads/2018/04/No-image-available.jpg`\n                }\n                alt={original_name}\n              />\n              <InfoName>{name}</InfoName>\n              <InfoCharacter>Character: {character}</InfoCharacter>\n            </DetailsItem>\n          ))}\n        </ListCast>\n        {cast.length === 0 && (\n          <div>Sorry, there is no information about the actors.</div>\n        )}\n      </>\n    </div>\n  );\n}\n\nexport default Cast;\n"],"names":["ListCast","styled","DetailsItem","props","theme","spacing","InfoName","fontSize","m","InfoCharacter","CastImage","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","setError","useEffect","getMovieCast","toast","fetchMovieCast","Loader","map","id","profile_path","original_name","name","character","src","alt","length"],"sourceRoot":""}